name: Pipeline para Build, Test e Deploy de Aplicação Web

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v2

      - name: Login no Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKERHUB_USER}}
          password: ${{secrets.DOCKERHUB_PWD}} 
         
      - name: Copy Dockerfile
        run: cp /"C:\devopsagoravai1"/Dockerfile ./
    
      - name: Build Docker image
        run: docker build -t imagem-nova:latest .
    
                         
      - name: Build da imagem Docker
        run: docker build -t imagem-nova:latest .

      - name: Push da imagem Docker
        run: docker push imagem-nova:latest

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Run SAST Analysis via Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          username: ${{secrets.DOCKERHUB_USER}}
          password: ${{secrets.DOCKERHUB_PWD}}

      # Aqui você pode adicionar outros passos de teste, como testes unitários e de integração

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v2

      - name: Login no Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKERHUB_USER}}
          password: ${{secrets.DOCKERHUB_PWD}}

      - name: Pull da imagem Docker
        run: docker pull imagem-nova:latest

      - name: Iniciar o contêiner Docker
        run: docker run -d -p 80:80 imagem-nova:latest

      - name: Instalar o ngrok
        run: |
          curl -s https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip --output /tmp/ngrok.zip
          unzip /tmp/ngrok.zip -d /usr/local/bin

      - name: Iniciar o ngrok
        run: ngrok http 80
